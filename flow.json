[
    {
        "id": "1028f2c55fc7714c",
        "type": "tab",
        "label": "Create DB",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "73753423a2986dfc",
        "type": "tab",
        "label": "Get node status",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "25fd37bacfc4abea",
        "type": "tab",
        "label": "UI",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "1508a3e4153b14d5",
        "type": "tab",
        "label": "Blitzunorg Template",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "3d64281ef79e1ad0",
        "type": "group",
        "z": "1508a3e4153b14d5",
        "name": "Blitzuntorg Lightning Detector",
        "style": {
            "label": true
        },
        "nodes": [
            "1041bd1a461c3d0f",
            "cf5e508a778ca2f1",
            "d4ab2e7a058efa52",
            "c5e94b65587a5ecf",
            "748b3a057a000196",
            "26076086bf8fc333",
            "d2a708f3187a47cd",
            "0513a57b4e4d0dcd",
            "e3a5c21d8df5db34",
            "082989859eb6f588",
            "67e839020acdecde",
            "cc7cb9c32180cb28",
            "4a0745f346aa72f1",
            "228b071b1b8dbacd",
            "58c390d3c5686685"
        ],
        "x": null,
        "y": null,
        "w": null,
        "h": null
    },
    {
        "id": "3c4c5df667217faa",
        "type": "group",
        "z": "1508a3e4153b14d5",
        "name": "update Toolbar",
        "style": {
            "label": true
        },
        "nodes": [
            "426a619c3b098feb",
            "73515fdd0cf3bfe7"
        ],
        "x": null,
        "y": null,
        "w": null,
        "h": null
    },
    {
        "id": "bea4993f.85f4d8",
        "type": "websocket-client",
        "path": "wss://ws7.blitzortung.org/",
        "tls": "621bc3fe.d747dc",
        "wholemsg": "false",
        "hb": "0"
    },
    {
        "id": "621bc3fe.d747dc",
        "type": "tls-config",
        "name": "",
        "cert": "",
        "key": "",
        "ca": "",
        "certname": "",
        "keyname": "",
        "caname": "",
        "servername": "",
        "verifyservercert": false,
        "alpnprotocol": ""
    },
    {
        "id": "671b6fb51007cada",
        "type": "sqlitedb",
        "db": "allstardb",
        "mode": "RWC"
    },
    {
        "id": "2c8f7a1cfa0cbe54",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "2bcb3cb3a9da2758",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "8f4542aa.faf2",
        "type": "ui_tab",
        "name": "Web Page 2",
        "icon": "wi-wu-tstorms",
        "order": 8,
        "disabled": true,
        "hidden": false
    },
    {
        "id": "0fe8b19804e3b7af",
        "type": "ui_group",
        "name": "Default",
        "tab": "2bcb3cb3a9da2758",
        "order": 1,
        "disp": false,
        "width": "20",
        "collapse": false,
        "className": ""
    },
    {
        "id": "e357ef02.ef3cb",
        "type": "ui_group",
        "name": "Blitzunorg 1",
        "tab": "2bcb3cb3a9da2758",
        "order": 2,
        "disp": false,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "b3978eb02795dec2",
        "type": "inject",
        "z": "1028f2c55fc7714c",
        "name": "Create Allstar DB",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "CREATE TABLE IF NOT EXISTS mapData(nodeNr INT  PRIMARY KEY NOT NULL, call TEXT, lat REAL, lon REAL);",
        "payload": "",
        "payloadType": "date",
        "x": 530,
        "y": 300,
        "wires": [
            [
                "3975cd76ad7ef3e9"
            ]
        ]
    },
    {
        "id": "f729672669eaf889",
        "type": "inject",
        "z": "1028f2c55fc7714c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "10",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 350,
        "y": 600,
        "wires": [
            [
                "f08341e114818f6c"
            ]
        ]
    },
    {
        "id": "f08341e114818f6c",
        "type": "http request",
        "z": "1028f2c55fc7714c",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://stats.allstarlink.org/api/stats/mapData",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 610,
        "y": 600,
        "wires": [
            [
                "e2ee888d3780d5b8"
            ]
        ]
    },
    {
        "id": "e2ee888d3780d5b8",
        "type": "csv",
        "z": "1028f2c55fc7714c",
        "name": "",
        "sep": "\\t",
        "hdrin": "",
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "node,call,lat,lon,city,state,name",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 870,
        "y": 600,
        "wires": [
            [
                "a5492dc44c865ddb",
                "3c285f674bf286d8"
            ]
        ]
    },
    {
        "id": "2652d525ddf3cc61",
        "type": "debug",
        "z": "1028f2c55fc7714c",
        "name": "debug 1",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1320,
        "y": 620,
        "wires": []
    },
    {
        "id": "3df27b56f3154371",
        "type": "debug",
        "z": "1028f2c55fc7714c",
        "name": "debug 2",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1280,
        "y": 340,
        "wires": []
    },
    {
        "id": "a5492dc44c865ddb",
        "type": "function",
        "z": "1028f2c55fc7714c",
        "name": "Insert mapData records",
        "func": "// let nodeNr = msg.payload.node;\nlet call = msg.payload.call;\n// let lat = msg.payload.lat;\n// let lon = msg.payload.lon;\n\n// console.log(msg.payload.call);\n\nvar newMsg = {\"topic\": \"INSERT INTO mapData (nodeNr,call,lat,lon) VALUES (\" + msg.payload.node + \",'\" + msg.payload.call + \"',\" + msg.payload.lat + \",\" + msg.payload.lon + \")\"}\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 460,
        "wires": [
            [
                "2652d525ddf3cc61",
                "3975cd76ad7ef3e9"
            ]
        ]
    },
    {
        "id": "3c285f674bf286d8",
        "type": "debug",
        "z": "1028f2c55fc7714c",
        "name": "debug 3",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1100,
        "y": 800,
        "wires": []
    },
    {
        "id": "3975cd76ad7ef3e9",
        "type": "sqlite",
        "z": "1028f2c55fc7714c",
        "mydb": "671b6fb51007cada",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "AllstarDB",
        "x": 1000,
        "y": 340,
        "wires": [
            [
                "3df27b56f3154371"
            ]
        ]
    },
    {
        "id": "159b709d64583e75",
        "type": "http request",
        "z": "73753423a2986dfc",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://stats.allstarlink.org/api/stats/410460",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 450,
        "y": 300,
        "wires": [
            [
                "48dbd04d486ca062",
                "5e93abc36858b1a9"
            ]
        ]
    },
    {
        "id": "21af9f15ca0297a8",
        "type": "inject",
        "z": "73753423a2986dfc",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": "30",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 230,
        "y": 320,
        "wires": [
            [
                "159b709d64583e75"
            ]
        ]
    },
    {
        "id": "8dda3545f10b6d48",
        "type": "function",
        "z": "73753423a2986dfc",
        "name": "Get linked nodes",
        "func": "let links = msg.payload.stats.data.links;\n// var newMsg = { \"topic\": \"INSERT INTO mapData (nodeNr,call,lat,lon) VALUES (\" + msg.payload.node + \",'\" + msg.payload.call + \"',\" + msg.payload.lat + \",\" + msg.payload.lon + \")\" }\nfor (var link in links) {\n    console.log(links[link]);\n    var newMsg = {\"payload\": links[link]};\n    node.send(newMsg);\n    // node.send(parseInt(links[link]));\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 300,
        "wires": [
            [
                "8ff95134728a2aaa",
                "a2d3215673a6b164"
            ]
        ]
    },
    {
        "id": "48dbd04d486ca062",
        "type": "debug",
        "z": "73753423a2986dfc",
        "name": "debug 4",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 400,
        "wires": []
    },
    {
        "id": "5e93abc36858b1a9",
        "type": "json",
        "z": "73753423a2986dfc",
        "name": "Convert to JSON",
        "property": "payload",
        "action": "",
        "pretty": true,
        "x": 750,
        "y": 300,
        "wires": [
            [
                "8dda3545f10b6d48",
                "8a4ab86042aeb5fa"
            ]
        ]
    },
    {
        "id": "8a4ab86042aeb5fa",
        "type": "debug",
        "z": "73753423a2986dfc",
        "name": "debug 5",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 960,
        "y": 480,
        "wires": []
    },
    {
        "id": "8ff95134728a2aaa",
        "type": "debug",
        "z": "73753423a2986dfc",
        "name": "debug 6",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1180,
        "y": 380,
        "wires": []
    },
    {
        "id": "a2d3215673a6b164",
        "type": "http request",
        "z": "73753423a2986dfc",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "body",
        "url": "https://stats.allstarlink.org/api/stats/{{payload}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1250,
        "y": 300,
        "wires": [
            [
                "5c3222595b25fb44"
            ]
        ]
    },
    {
        "id": "427773346a6be254",
        "type": "debug",
        "z": "73753423a2986dfc",
        "name": "debug 7",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1720,
        "y": 300,
        "wires": []
    },
    {
        "id": "042f0196e4de2cd4",
        "type": "function",
        "z": "73753423a2986dfc",
        "name": "Look up lat/lon",
        "func": "// console.log(msg.payload.stats.node);\n// var newMsg = { \"topic\": \"INSERT INTO mapData (nodeNr,call,lat,lon) VALUES (\" + msg.payload.node + \",'\" + msg.payload.call + \"',\" + msg.payload.lat + \",\" + msg.payload.lon + \")\" }\nvar newMsg = {\"topic\": \"SELECT * FROM mapData where nodeNr = \" + msg.payload.stats.node +\"\"}\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1540,
        "y": 420,
        "wires": [
            [
                "427773346a6be254",
                "0a834e7d5d51643e"
            ]
        ]
    },
    {
        "id": "5c3222595b25fb44",
        "type": "json",
        "z": "73753423a2986dfc",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1450,
        "y": 300,
        "wires": [
            [
                "042f0196e4de2cd4",
                "0d49abebb9c7631e"
            ]
        ]
    },
    {
        "id": "0d49abebb9c7631e",
        "type": "debug",
        "z": "73753423a2986dfc",
        "name": "debug 8",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1600,
        "y": 160,
        "wires": []
    },
    {
        "id": "7c5e6a96811e54f1",
        "type": "debug",
        "z": "73753423a2986dfc",
        "name": "debug 9",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 300,
        "y": 780,
        "wires": []
    },
    {
        "id": "53f7d79a436ea877",
        "type": "function",
        "z": "73753423a2986dfc",
        "name": "Set map data",
        "func": "let name = msg.payload[0].call;\nlet lat = msg.payload[0].lat;\nlet lon = msg.payload[0].lon;\n// payload[0].call\n\nmsg.payload = {\"name\": name, \"lat\": lat, \"lon\": lon, \"node\": msg.payload[0].nodeNr, \"icon\": \"fa-home\", greatcircle: [[39.555363,-104.870490],[lat, lon]]};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 620,
        "wires": [
            [
                "e89e7abb73db0a93",
                "e820d763a3c6643c"
            ]
        ]
    },
    {
        "id": "e820d763a3c6643c",
        "type": "debug",
        "z": "73753423a2986dfc",
        "name": "Map payload debug",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 790,
        "y": 720,
        "wires": []
    },
    {
        "id": "0a834e7d5d51643e",
        "type": "sqlite",
        "z": "73753423a2986dfc",
        "mydb": "671b6fb51007cada",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "Get node data",
        "x": 240,
        "y": 620,
        "wires": [
            [
                "7c5e6a96811e54f1",
                "53f7d79a436ea877"
            ]
        ]
    },
    {
        "id": "e89e7abb73db0a93",
        "type": "worldmap",
        "z": "73753423a2986dfc",
        "name": "",
        "lat": "39.555363",
        "lon": "-104.870490",
        "zoom": "6",
        "layer": "EsriT",
        "cluster": "4",
        "maxage": "",
        "usermenu": "show",
        "layers": "show",
        "panit": "false",
        "panlock": "false",
        "zoomlock": "false",
        "hiderightclick": "false",
        "coords": "none",
        "showgrid": "false",
        "showruler": "false",
        "allowFileDrop": "false",
        "path": "/worldmap",
        "overlist": "RA,DN",
        "maplist": "EsriT",
        "mapname": "",
        "mapurl": "",
        "mapopt": "",
        "mapwms": false,
        "x": 860,
        "y": 640,
        "wires": []
    },
    {
        "id": "0b9da63d7d12bece",
        "type": "ui_iframe",
        "z": "25fd37bacfc4abea",
        "group": "0fe8b19804e3b7af",
        "name": "Allstar Spots",
        "order": 0,
        "width": "20",
        "height": "20",
        "url": "/worldmap",
        "origin": "*",
        "scale": "90",
        "x": 890,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "1041bd1a461c3d0f",
        "type": "inject",
        "z": "1508a3e4153b14d5",
        "g": "3d64281ef79e1ad0",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payloadType": "date",
        "x": 210,
        "y": 240,
        "wires": [
            [
                "cc7cb9c32180cb28"
            ]
        ]
    },
    {
        "id": "cf5e508a778ca2f1",
        "type": "websocket out",
        "z": "1508a3e4153b14d5",
        "g": "3d64281ef79e1ad0",
        "name": "",
        "server": "",
        "client": "bea4993f.85f4d8",
        "x": 630,
        "y": 260,
        "wires": []
    },
    {
        "id": "d4ab2e7a058efa52",
        "type": "websocket in",
        "z": "1508a3e4153b14d5",
        "g": "3d64281ef79e1ad0",
        "name": "",
        "server": "",
        "client": "bea4993f.85f4d8",
        "x": 160,
        "y": 340,
        "wires": [
            [
                "c5e94b65587a5ecf"
            ]
        ]
    },
    {
        "id": "c5e94b65587a5ecf",
        "type": "function",
        "z": "1508a3e4153b14d5",
        "g": "3d64281ef79e1ad0",
        "name": "",
        "func": "function decode(b) {\n var a, e = {},o\n d = b.split(\"\")\n c = d[0],\n f = c,\n g = [c],\n h = 256;\n o = h;\n for (b = 1; b < d.length; b++) a = d[b].charCodeAt(0), a = h > a ? d[b] : e[a] ? e[a] : f + c, g.push(a), c = a.charAt(0), e[o] = f + c, o++, f = a;\n return g.join(\"\")\n}\n\nreturn {\n payload: decode(msg.payload)\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 340,
        "wires": [
            [
                "d2a708f3187a47cd"
            ]
        ]
    },
    {
        "id": "748b3a057a000196",
        "type": "function",
        "z": "1508a3e4153b14d5",
        "g": "3d64281ef79e1ad0",
        "name": "",
        "func": "if ((msg.topic) === 'lightning'){\n   return {payload: 'Warning, Lightning Alert'};\n} else return null;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 340,
        "wires": [
            [
                "26076086bf8fc333"
            ]
        ]
    },
    {
        "id": "d2a708f3187a47cd",
        "type": "json",
        "z": "1508a3e4153b14d5",
        "g": "3d64281ef79e1ad0",
        "name": "convert JSON",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 140,
        "y": 420,
        "wires": [
            [
                "0513a57b4e4d0dcd"
            ]
        ]
    },
    {
        "id": "0513a57b4e4d0dcd",
        "type": "function",
        "z": "1508a3e4153b14d5",
        "g": "3d64281ef79e1ad0",
        "name": "Get strikes by lat lon",
        "func": "function arePointsNear(checkPoint, centerPoint) {\n var ky = 40000 / 360;\n var kx = Math.cos(Math.PI * centerPoint.lat / 180.0) * ky;\n var dx = Math.abs(centerPoint.lng - checkPoint.lng) * kx;\n var dy = Math.abs(centerPoint.lat - checkPoint.lat) * ky;\n return Math.sqrt(dx * dx + dy * dy);\n}\n\nvar strike = { lat: msg.payload.lat, lng: msg.payload.lon };\n\n// set latitute + longitude accordingly\nvar home = { lat: 39.5553175, lng: -104.8709438 };\nvar n = arePointsNear(strike, home);\nn = Math.round(n);\n\n// '10' = km radius, replace with whatever km radius you'd like\nif(n <= 25) {\n // return distance to strike if strike is in defined radius\n msg =  {payload: '<' + n + ' Km', color: \"#c40606\", topic: 'lightning'};\n//    return msg;\n return [[msg],[]]\n\n} else\n msg =   {payload: '> 25 Km', color: \"#14f00c\",};\n// return msg;\n return [[ ],[ msg]];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 420,
        "wires": [
            [
                "4a0745f346aa72f1",
                "e3a5c21d8df5db34"
            ],
            [
                "228b071b1b8dbacd"
            ]
        ]
    },
    {
        "id": "cc7cb9c32180cb28",
        "type": "function",
        "z": "1508a3e4153b14d5",
        "g": "3d64281ef79e1ad0",
        "name": "",
        "func": "return { payload: '{ \"a\": 542 }'};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 260,
        "wires": [
            [
                "cf5e508a778ca2f1"
            ]
        ]
    },
    {
        "id": "4a0745f346aa72f1",
        "type": "rbe",
        "z": "1508a3e4153b14d5",
        "g": "3d64281ef79e1ad0",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 550,
        "y": 340,
        "wires": [
            [
                "748b3a057a000196"
            ]
        ]
    },
    {
        "id": "228b071b1b8dbacd",
        "type": "delay",
        "z": "1508a3e4153b14d5",
        "g": "3d64281ef79e1ad0",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "30",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 480,
        "y": 440,
        "wires": [
            [
                "e3a5c21d8df5db34"
            ]
        ]
    },
    {
        "id": "73515fdd0cf3bfe7",
        "type": "comment",
        "z": "1508a3e4153b14d5",
        "g": "3c4c5df667217faa",
        "name": "Header Clock Toolbar",
        "info": "# Contest Calls/Score with UTC Clock\n* Display Contest Calls/Scores for calls selected with calls entered in Online Scorboard in Configuration and Resets tab\n* Variable data is picked up on Online Scoreboard flow with UI nodes.\n---\n\n# Contest Calls&Score\nContest Call Displays Call and Score data for the following variables:\n* contestname\n* callsign\n* chasecall1\n* chasecall2\n* chasecall3\n* chasecall4\n\n---\n\n\n## UTC Clock\nCurrent format is 4/13/22, 20:00 UTC\n\n`        function displayTime() {\n        var d = Date();\n        var options = { timeZone: 'UTC', timeZoneName: 'short', year: '2-digit', month: 'numeric', day: 'numeric', hourCycle:\n        'h23', hour: `2-digit`, minute: `2-digit`};\n        p.text(new Date().toLocaleString('en-US', options));\n        }`\n    The format is based on toLocaleString based formats. See documentation <a href=\"https://www.w3schools.com/jsref/jsref_tolocalestring.asp\">W3_Schools_toLocaleString</a>",
        "x": 400,
        "y": 80,
        "wires": []
    },
    {
        "id": "58c390d3c5686685",
        "type": "comment",
        "z": "1508a3e4153b14d5",
        "g": "3d64281ef79e1ad0",
        "name": "Change lat / lon here",
        "info": "",
        "x": 310,
        "y": 460,
        "wires": []
    },
    {
        "id": "26076086bf8fc333",
        "type": "ui_audio",
        "z": "1508a3e4153b14d5",
        "name": "",
        "group": "e357ef02.ef3cb",
        "voice": "Microsoft Zira - English (United States)",
        "always": true,
        "x": 840,
        "y": 340,
        "wires": []
    },
    {
        "id": "67e839020acdecde",
        "type": "ui_ui_control",
        "z": "1508a3e4153b14d5",
        "name": "",
        "events": "all",
        "x": 220,
        "y": 280,
        "wires": [
            [
                "cc7cb9c32180cb28"
            ]
        ]
    },
    {
        "id": "e3a5c21d8df5db34",
        "type": "ui_template",
        "z": "1508a3e4153b14d5",
        "group": "0fe8b19804e3b7af",
        "name": "addToOneGrpPerDashboardPage",
        "order": 19,
        "width": 0,
        "height": 0,
        "format": "<script>\n    (function(scope) {\n        //hide this card. NOTE: 4b689f7473831a84 is the Node id as \n        //seen in the INFO panel on the sidebar when you select this node\n         $('[node-id=\"e3a5c21d8df5db34\"]').hide();\n        scope.$watch('msg', function(msg) {\n            if (msg.payload.length !== 0) {\n                $(\"#header-icon\").html(\"<i class='fa fa-bolt fa-2x' aria-hidden='true'></i>\").css(\"color\",(msg.color));\n                $(\"#header-lightning\").text(msg.payload); \n            }\n        });\n    })(scope);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 740,
        "y": 400,
        "wires": [
            [
                "082989859eb6f588"
            ]
        ]
    },
    {
        "id": "082989859eb6f588",
        "type": "ui_template",
        "z": "1508a3e4153b14d5",
        "group": "0fe8b19804e3b7af",
        "name": "addToOneGrpPerDashboardPage",
        "order": 19,
        "width": 0,
        "height": 0,
        "format": "<script>\n    (function(scope) {\n        //hide this card. NOTE: 4b689f7473831a84 is the Node id as \n        //seen in the INFO panel on the sidebar when you select this node\n         $('[node-id=\"082989859eb6f588\"]').hide();\n        scope.$watch('msg', function(msg) {\n            if (msg.payload.length !== 0) {\n                $(\"#header-icon\").html(\"<i class='fa fa-bolt fa-2x' aria-hidden='true'></i>\").css(\"color\",(msg.color));\n                $(\"#header-lightning\").text(msg.payload); \n            }\n        });\n    })(scope);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 740,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "426a619c3b098feb",
        "type": "ui_template",
        "z": "1508a3e4153b14d5",
        "group": "e357ef02.ef3cb",
        "name": "Lightning/Clock",
        "order": 2,
        "width": 0,
        "height": 0,
        "format": "<script id=\"toolbar\" type=\"text/javascript\">\n    var clockInterval;\n    $(function () {\n        if (clockInterval) return;\n\n      \n        //add lightning\n        var div1 = $('<div/>');\n        let l1 = $('<p/ id=\"header-icon\">');\n        let l2 = $('<p/ id=\"header-lightning\">');\n        \n        div1.append(l1);\n        div1.append(l2);\n        \n        div1[0].style.width = 'auto';\n        div1[0].style.margin = 'auto';\n        div1[0].style.display = 'flex';\n        div1[0].style.color = 'white';\n        \n        l1[0].style.margin = 'auto';\n        l2[0].style.margin = '5px';\n        l2[0].style.color = 'white';\n    \n     \n        // add clock\n        var div2 = $('<div/>');\n        var p = $('<p/>');\n\n        div2.append(p);\n        div2[0].style.margin = '5px 5px 5px auto';\n        div2[0].style.display = 'flex';\n\n\n        function displayTime() {\n            var d = Date();\n            var options = { timeZone: 'UTC', timeZoneName: 'short',  hourCycle: 'h23', hour: `2-digit`, minute: `2-digit`, second: `2-digit`};\n            p.text(new Date().toLocaleString('en-US', options));\n        }\n        \n        clockInterval = setInterval(displayTime, 1000);\n\n        //add to toolbar when it's available\n        var addToToolbarTimer;\n        \n        function addToToolbar() {\n            var toolbar = $('.md-toolbar-tools');\n            \n            if(!toolbar.length) return;\n            \n            toolbar.append(div1);\n            toolbar.append(div2);\n\n            clearInterval(addToToolbarTimer);\n        }\n        addToToolbarTimer = setInterval(addToToolbar, 50);\n    });\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "global",
        "className": "",
        "x": 380,
        "y": 120,
        "wires": [
            []
        ],
        "icon": "font-awesome/fa-list-alt",
        "info": "# Solar / foF2 / Clock\n\n## Client Template Node in header\n\n1. solar data from Solar flow variables:  #kdx, #sfi, #Aindex, and #fof2\n2. Function for UTC clock\n\n"
    }
]